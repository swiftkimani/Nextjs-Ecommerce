"use client"
import FormHeader from '@/components/backOffice/FormHeader';
import ImageInput from '@/components/Forminput/Imageinput';
import SelectInput from '@/components/Forminput/Selectinput';
import SubmitButton from '@/components/Forminput/SubmitButton';
import TextareaInput from '@/components/Forminput/TexrAreainput';
import TextInput from '@/components/Forminput/Textinput';
import { makePostRequest } from '@/lib/apiRequest';
import { generateSlug } from '@/lib/generateSlug';
import React, { useState } from 'react'
import { useForm } from 'react-hook-form';

export default function NewCategory() {

  const [imageUrl, setImageUrl] = useState("")
  const [loading, setLoading] = useState(false)
  const { register, reset, handleSubmit, formState: { errors } } = useForm()
  
  async function onSubmit(data) {
    
    const slug = generateSlug(data.title)
    data.slug = slug
    data.imageUrl = imageUrl
    console.log(data)

    makePostRequest(setLoading, "api/banners", data, "Banner", reset); 

    setImageUrl("")

  }
  return (
    <div>
      <FormHeader title="New Banner" />
      {/* -id(autogenerated), -title, -Link, -description, -image */}

      <form
        onSubmit={handleSubmit(onSubmit)}
        className="w-full max-w-4xl p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700 mx-auto my-3 ">
        <div className="grid gap-4 sm:grid-cols-2 sm:gap-6">
          <TextInput
            label="Banner Title"
            name="title"
            register={register}
            errors={errors}
          />
          <TextInput
            label="Banner Link"
            name="link"
            type='url'
            register={register}
            errors={errors}
          />
          {/* configure endpoint of image in core js */}
          <ImageInput
            imageUrl={imageUrl}
            setImageUrl={setImageUrl}
            endpoint="bannerImageUploader"
            label="Banner Image"
          />
        </div>
        <SubmitButton
          isLoading={loading}
          buttonTitle="Create Banner"
          loadingButtonTitle="Creating Banner please wait"
        />
      </form>
    </div>
  );
}
